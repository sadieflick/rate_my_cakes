{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cake/cake.component.css","webpack:///./src/app/cake/cake.component.html","webpack:///./src/app/cake/cake.component.ts","webpack:///./src/app/root.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"* {\\n    padding: 0px;\\n    margin: 0px;\\n    font-family: sans-serif;\\n}\\n\\n#wrapper {\\n    width: 80%;\\n    height: 80%;\\n    border: 2px solid black;\\n    margin: 0 auto;\\n}\\n\\n.form {\\n    width: 30%;\\n    display: inline-block;\\n    height: 25%;\\n    border: 2px solid grey;\\n    vertical-align: top;\\n}\\n\\n#blue_button {\\n    background-color: rgb(121, 199, 250);\\n    color: white;\\n    padding: 5px;\\n}\\n\\n#subtitle {\\n    color: grey;\\n    border-bottom: 4px solid rgb(0, 140, 255);\\n}\\n\\n#cake_box {\\n    display: inline-block;\\n    height: 300px;\\n    overflow: scroll;\\n}\\n\\n.grey_button {\\n    background-color: grey;\\n    color: white;\\n    padding: 3px 8px;\\n}\\n\\n.form2 {\\n    display: inline-block;\\n    width: 25%;\\n    height: 200px;\\n    vertical-align: top;\\n}\\n\\n#cake_box img {\\n    width: 200px;\\n    height: 200px;\\n    display: inline-block;\\n}\"","module.exports = \"<html lang=\\\"en\\\">\\n\\t<head>\\n\\t\\t<title>Restful Tasks</title>\\n</head>\\n\\t<body>\\n\\t\\t<div id=\\\"wrapper\\\">\\n\\n      <h1>Rate my Cakes</h1>\\n\\n      <form class=\\\"form\\\" (submit)=\\\"onSubmit()\\\">\\n          <!-- use the json pipe to see how newTask changes in real time -->\\n          <p id=\\\"subtitle\\\">Submit a cake to be rated</p>\\n          <p>Baker name:</p> <input type=\\\"text\\\" name=\\\"newCake.bakerName\\\" [(ngModel)]=\\\"newCake.bakerName\\\" />\\n          <p>Image url:</p> <input type=\\\"text\\\" name=\\\"newCake.imgURL\\\" [(ngModel)]=\\\"newCake.imgURL\\\" />\\n          <button id=\\\"blue_button\\\">SUBMIT</button>\\n      </form>\\n      \\n\\n        <div id=\\\"cake_box\\\">\\n          <div class=\\\"listing\\\" *ngFor=\\\"let cake of cakes\\\">\\n            <img [src]=\\\"cake.imgURL\\\" (click)=\\\"show(cake._id)\\\">\\n            <form class=\\\"form2\\\" (submit)=\\\"submitComment(cake)\\\">\\n              <select name=\\\"newComment.rating\\\" [(ngModel)]=\\\"newComment.rating\\\">\\n                  <option value=\\\"1\\\">1 star</option>\\n                  <option value=\\\"2\\\">2 stars</option>\\n                  <option value=\\\"3\\\">3 stars</option>\\n                  <option value=\\\"4\\\">4 stars</option>\\n                  <option value=\\\"5\\\">5 stars</option>\\n              </select>\\n              <textarea rows=\\\"4\\\" cols=\\\"20\\\" name=\\\"newComment.content\\\" [(ngModel)]=\\\"newComment.content\\\" placeholder=\\\"Enter your comment here.\\\"></textarea>\\n              <button class=\\\"grey_button\\\">Rate!</button>\\n            </form>\\n          </div>\\n        </div>\\n      \\n      <app-cake [showCakePressed]=\\\"showCakePressed\\\" *ngIf=\\\"currentCake\\\" [currentCake]=\\\"currentCake\\\" [cakeAvg]=\\\"cake_avg\\\"></app-cake>\\n\\n\\n    </div><!--end of wrapper-->\\n\\t</body>\\n</html>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RootService } from './root.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n\n  constructor(private _httpService: RootService){\n    console.log(\"Loaded app component\");\n  }\n\n  cakes = {};\n  currentCake = {};\n  showAllPressed = false;\n  showCakePressed = false;\n  newComment: any;\n  newCake: any;\n  cakeForComment: any;\n  cake_avg = 0;\n  // editedcake = null;\n  // editingcake = false;\n  \n\n  ngOnInit(){\n    this.getCakesFromService();\n    this.currentCake = {};\n    this.showAllPressed = false;\n    this.showCakePressed = false;\n    this.newComment = {content: \"\", rating: \"\", cake: {}};\n    this.newCake = {imgURL: \"\", bakerName: \"\", comments: []};\n  }\n  getCakesFromService(){\n    \n    let observable = this._httpService.getCakes();\n    observable.subscribe(data => {\n      this.showAllPressed = true;\n      // In this example, the array of cakes is assigned to the key 'cakes' in the data object. \n      // This may be different for you, depending on how you set up your cake API.copy\n      this.cakes = data[\"data\"];\n      // console.log(\"all cakes: \", this.cakes);\n      \n    });\n\n  }\n  show(cake_id) {\n    // console.log(\"cake id: \",cake_id);\n    let observable = this._httpService.getCakeByID(cake_id);\n    observable.subscribe(data => {\n      // console.log(\"Data in subscribe show: \", data)\n      this.currentCake = data[\"data\"][0];\n\n      this.cake_avg = this.generateAvg(this.currentCake);\n      console.log(\"Cake avg now: \", this.cake_avg);\n    });\n    this.showCakePressed = true;\n\n    \n  }\n\n  generateAvg(cake) {\n\n      console.log(\"in generate avg cake: \", cake);\n      var rate_count = 0;\n      for (var i = 0; i < cake.comments.length; i++) {\n        rate_count += Number(cake.comments[i].rating);\n      }\n      var avg = rate_count/cake.comments.length;\n      console.log(\"Avg at end of function: \", avg);\n      return avg;\n  }\n\n  onSubmit() {\n    // console.log(\"In submit\");\n    // console.log(\"New cake in on submit: \", this.newCake)\n    let observable = this._httpService.addNewCake(this.newCake);\n    observable.subscribe(data => {\n      console.log(\"in observable: \", data);\n    })\n    this.newCake = {title: \"\", description: \"\"}\n    this.getCakesFromService();\n  }\n\n  submitComment(cake) {\n    console.log(\"In submit comment\");\n    console.log(\"New comment in on submit: \", this.newComment)\n    let observable = this._httpService.addNewComment(this.newComment);\n    observable.subscribe(data => {\n      console.log(\"in observable comment: \", data);\n    });\n\n    this.cakeForComment = cake;\n    this.cakeForComment.comments.push(this.newComment);\n    console.log(\"In submitComment, pending edits: \", this.cakeForComment)\n    let observableComment = this._httpService.editCake(this.cakeForComment, this.cakeForComment._id);\n    observableComment.subscribe(data => {\n      console.log(\"in observable comment for cake: \", data);\n    })\n    this.newComment = {content: \"\", rating: \"\"};\n    // this.getCakesFromService();\n  }\n}","import { RootService } from './root.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { CakeComponent } from './cake/cake.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CakeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [RootService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"\\n<html lang=\\\"en\\\">\\n\\n<div id=\\\"bottom_box\\\" *ngIf=\\\"showCakePressed == true\\\">\\n  <h1>Baked by {{currentCake.bakerName}}</h1>\\n    <img [src]=\\\"currentCake['imgURL']\\\">\\n    <p>Average rating: {{cakeAvg}}</p>\\n\\n    <div *ngFor=\\\"let comment of currentCake['comments']\\\">\\n      <h3>{{comment.content}}</h3>\\n      <h3>{{comment.rating}}</h3>\\n    </div>\\n</div>\\n\\n</html>\\n\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-cake',\n  templateUrl: './cake.component.html',\n  styleUrls: ['./cake.component.css']\n})\nexport class CakeComponent implements OnInit {\n\n  @Input() currentCake: any;\n  @Input() showCakePressed: boolean;\n  @Input() cakeAvg: number;\n\n  comments = [];\n  rate_count = 0;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\n\nexport class RootService {\n\n  constructor(private _http: HttpClient) { \n    // this.getTasks();\n    // this.getTaskByID();\n  }\n\n  getCakes(){\n\n    return this._http.get('/api/cakes');\n\n  }\n\n  getCakeByID(cake_id){\n\n    console.log(\"In service, cake id passed: \", cake_id)\n    return this._http.get('/api/cakes/' + cake_id);\n\n  }\n\n  addNewCake(newCake) {\n    console.log(\"In service, add cake: \", newCake);\n    return this._http.post('/api/cakes', newCake);\n  }\n\n  addNewComment(newComment) {\n    console.log(\"In service, add comment\", newComment);\n    return this._http.post('/api/comments', newComment);\n  }\n\n  editCake(cakeForComment, cake_id) {\n\n    return this._http.patch('/api/cakes/'+ cake_id, cakeForComment);\n  }\n\n  // deleteCake(cake_id) {\n  //   return this._http.delete('api/cakes/' + cake_id)\n  // }\n\n}\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}